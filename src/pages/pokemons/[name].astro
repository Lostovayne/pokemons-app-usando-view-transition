---
import { Icon } from "astro-icon/components";
import PokemonCard from "@/components/pokemons/PokemonCard.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import type { PokemonListResponse } from "@/interfaces/pokemon-list.response";
import type { GetStaticPaths } from "astro";

import Title from "@/components/shared/Title.astro";

interface Props {
  url: string;
}

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon/?limit=151");
  const { results }: PokemonListResponse = await resp.json();

  const PokeArray = results.map(({ name, url }) => {
    return {
      params: { name },
      props: { name, url },
    };
  });

  return PokeArray;
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title={`Pokémon - #${id} ${name}`}
  description={`Información sobre el pokémon ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div class="">
        <button
          class="text-white font-bold py-2 px-4 rounded"
          onclick="history.back()"
        >
          Regresar</button
        >
        <Title>{name}</Title>
      </div>

      <button id="btn-favorite" data-name={name} data-id={id}>
        <Icon name="outline" size={30} class:list={["text-red-500"]} />
        <Icon class:list={["text-red-500 hidden"]} name="heart" size={30} />
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig />
    <audio controls class="mt-10">
      <source src={audioSrc} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
  </section>
</MainLayout>

<script>
  interface FavoritePokemon {
    name: string;
    id: string;
  }

  const handlePageLoad = () => {
    const btnFavorite = document.querySelector(
      "#btn-favorite"
    ) as HTMLButtonElement;

    if (!btnFavorite) return;
    const name = btnFavorite.getAttribute("data-name");
    const id = btnFavorite.getAttribute("data-id");

    btnFavorite.addEventListener("click", () => {
      console.log(name, id);
    });
  };

  document.addEventListener("astro:page-load", handlePageLoad);
</script>

<style>
  a {
    @apply hover:underline text-blue-500;
  }

  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
